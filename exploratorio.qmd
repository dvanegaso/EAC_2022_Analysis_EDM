---
title: "Análisis Exploratorio"
format: html
editor: visual
theme: flatly
echo: false
engine: knitr
---

```{r}
suppressMessages({

#Importamos Librerias
library(readxl)
library(FactoClass)
library(factoextra)
library(plotly)
library(knitr)
library(ggplot2)
library(dplyr)
library(Factoshiny)
library(DT) # para tablas interactivas
library(plotly) # para gráficos interactivos

#Importamos la base de datos
setwd("C:/Users/thetr/OneDrive/Documentos/R/Proyecto EDM")
ruta_del_archivo <- "EAC_CIFRAS_2022_ANONIMIZADA_FINAL.csv"
datos_orig <- read.csv(ruta_del_archivo, sep = ";", dec = ",")
#En nuestro estudio, tomaremos aquellas empresas Activas. POr lo que, no tomaremos encienta a empresas con produccion bruta = 0. 
#Asi que, eliminaremos aquellos datos que tengan produccion bruta =0 (Son alrededor de 200 datos).
datos <- datos_orig[!is.na(as.numeric(datos_orig$BRUTA)) & as.numeric(datos_orig$BRUTA) != 0, ]
#Crearemos dos nuevas bases de datos, en este caso, para las variables discretas y continuas de nuestro interes.
#IDOJ1
discretas <- select(datos, CORRELA_16, IDAIO, PROMUJ, PROHOM, PERMUJ, PERHOM, DIRMUJ, DIRHOM, AGENCIA, APRENDIZ, PUBLICI)
continuas <- select(datos, BRUTA, CONSUI, SUELDOS, PRESTAC, VENTA, AGREGA, SUEPLAN, PREPLAN, COTIZA, TOTREM, ROTACION, INVPRO, CTO, CTOINS, GASTOS, GASTOSNOP)
# convertimos los datos a tipo numerico. 
continuas <- data.frame(lapply(continuas, function(x) as.numeric(as.character(x))))
# convertimos a sus respectivos valores en pesos colombianos
continuas <-1000*continuas
#Ahora agregamos nuevas variables a continuas
Clasifemp <-discretas$CORRELA_16
continuas <- cbind(Clasifemp, continuas)
#asignamos a los NA el valor de cero
continuas[is.na(continuas)] <- 0 

# Clasificaciones para variables discretas.

años <- as.integer(datos$IDAIO)
años[años < 1992] <- 1
años[años >= 1992 & años < 2002] <- 2
años[años >= 2002 & años < 2012] <- 3
años[años >= 2012 & años < 2024] <- 4
años <- factor(años, labels=c( "Mas de 30", "Entre 30 y 20", "Entre 20 y 10", "Menos de 10"))
discretas$IDAIO <- años

pbruta <- 1000*as.numeric(datos$BRUTA)

uvt22 = 38004
TMÑEMP <- unlist(pbruta/uvt22)
TMÑEMP[TMÑEMP <= 44769 ] <- 1
TMÑEMP[TMÑEMP > 44769 & TMÑEMP <= 431196] <- 2
TMÑEMP[TMÑEMP > 431196 & TMÑEMP <= 2160692] <- 3
TMÑEMP[TMÑEMP > 2160692] <- 4
TMÑEMP <- factor(TMÑEMP, labels=c("MIcroe", "PQempr", "MEdempr", "EmprGran"))
discretas <- cbind(discretas, TMÑEMP)

pbruta <- abs(pbruta/1000)
publicidad <- as.numeric(discretas$PUBLICI)
contador = as.integer(1)

for(i in publicidad){
  if (i/pbruta[contador] > 0 & i/pbruta[contador] < 0.02){
    publicidad[contador] <- 1 
  }else if (i/pbruta[contador] >= 0.02 ) {
    publicidad[contador] <- 2 
  }
  contador <- contador+1
}

publicidad <- factor(publicidad, labels=c("Nopub", "Pubbaja", "PubAlta"))
discretas$PUBLICI <- publicidad

smujeres <- as.integer(discretas$PROMUJ)
smujeres[smujeres >= 1 ] <- 1
smujeres <- factor(smujeres, labels=c("SisociosM", "NosociosM"))
discretas$PROMUJ<- smujeres

shombres <- as.integer(discretas$PROHOM)
shombres[shombres >= 1 ] <- 1
shombres <- factor(shombres, labels=c("SisociosH", "NosociosH"))
discretas$PROHOM<- shombres

pmujeres <- as.integer(discretas$PERMUJ)
pmujeres[pmujeres >= 1 & pmujeres < 10 ] <- 1
pmujeres[pmujeres >= 10 ] <- 2
pmujeres <- factor(pmujeres, labels=c("(0)PerM", "(1-10)PerM", "(>10)PerM"))
discretas$PERMUJ <- pmujeres

phombres <- as.integer(discretas$PERHOM)
phombres[phombres >= 1 & phombres<= 10 ] <- 1
phombres[phombres  > 10 ] <- 2
phombres <- factor(phombres, labels=c("(0)PerH", "(1-10)PerH", "(>10)PerH"))
discretas$PERHOM <- phombres

tmujeres <- as.integer(discretas$DIRMUJ)
tmujeres[tmujeres >= 1 & tmujeres < 10 ] <- 1
tmujeres[tmujeres >= 10 ] <- 2
tmujeres <- factor(tmujeres, labels=c("(0)tempM", "(1-10)tempM", "(>10)tempM"))
discretas$DIRMUJ <- tmujeres

thombres <- as.integer(discretas$DIRHOM)
thombres[thombres >= 1 & thombres<= 10 ] <- 1
thombres[thombres  > 10 ] <- 2
thombres <- factor(thombres, labels=c("(0)tempH", "(1-10)tempH", "(>10)tempH"))
discretas$DIRHOM <- thombres

ptagenc <- as.integer(discretas$AGENCIA)
ptagenc[ptagenc >= 1 ] <- 1
ptagenc <- factor(ptagenc, labels=c("No Agencia", "Si Agencia" ))
discretas$AGENCIA <- ptagenc

aprendiz <- as.integer(discretas$APRENDIZ)
aprendiz[aprendiz >= 1 & aprendiz< 3 ] <- 1
aprendiz[aprendiz  >= 3 ] <- 2
aprendiz <- factor(aprendiz, labels=c("(0)Apren", "(1-3)Apren", "(>3)Apren"))
discretas$APRENDIZ <- aprendiz

bruta = unlist(continuas[2])

gasnop = unlist(continuas[17])
porcentaje = gasnop/bruta
gasnop[porcentaje  <= 0.05 ] <- 1
gasnop[porcentaje  > 0.05 & porcentaje  <= 0.1] <- 2
gasnop[porcentaje  > 0.1] <- 3
gasnop = factor(gasnop, labels=c("Gastonop-bajo", "Gastonop-medio", "Gastonop-alto"))
discretas<- cbind(discretas,gasnop)

gastos = unlist(continuas[16])
porcentaje = bruta/gastos
gastos[porcentaje <= 0.3 ] <- 1
gastos[porcentaje  > 0.3 & porcentaje  <= 0.4] <- 2
gastos[porcentaje  > 0.4] <- 3
gastos = factor(gastos, labels=c("Gasto-bajo", "Gasto-medio", "Gasto-alto"))
discretas<- cbind(discretas,gastos)

invpro = unlist(continuas[13])
porcentaje = invpro/bruta
invpro[porcentaje <= 0.3 ] <- 1
invpro[porcentaje  > 0.3 & porcentaje  <= 1] <- 2
invpro[porcentaje  > 1] <- 3
invpro = factor(invpro, labels=c("invpro-bajo", "invpro-medio", "invpro-alto"))
discretas<- cbind(discretas,invpro)

uvt22 = 38004
venta = unlist(continuas[6])
porcentaje = venta/ uvt22
venta[porcentaje <= 431196 ] <- 1
venta[porcentaje  > 431196 & porcentaje  <= 1960692] <- 2
venta[porcentaje  > 1960692] <- 3

venta = factor(venta, labels=c("venta-bajo", "venta-medio", "venta-alto"))
discretas<- cbind(discretas,venta)


sueldos = unlist(continuas[4])
porcentaje = sueldos/bruta
sueldos[porcentaje <= 0.2 ] <- 1
sueldos[porcentaje  > 0.2 & porcentaje  <= 0.3] <- 2
sueldos[porcentaje  > 0.3] <- 3
sueldos = factor(sueldos, labels=c("sueldos-bajo", "sueldos-medio", "sueldos-alto"))
discretas<- cbind(discretas,sueldos)

consui = unlist(continuas[3])
porcentaje = consui/bruta
consui[porcentaje <= 0.15 ] <- 1
consui[porcentaje  > 0.15 & porcentaje  <= 0.25] <- 2
consui[porcentaje  > 0.25] <- 3
consui = factor(consui, labels=c("consui-bajo", "consui-medio", "consui-alto"))
discretas<- cbind(discretas,consui)

#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"

#convertir en dataframe el conteo de cada variable
CIIUcontados<-as.data.frame(table(discretas[,1]))
#categorías de la variable
catp <- attributes(CIIUcontados[,1])$levels

data <- data.frame(table(discretas[,1]))

perp <- (data[,2]/nrow(data))*100
})
#discretas<-as.data.frame.factor(discretas)

```

A continuación se muestran análisis exploratorios de las variables que serán tomadas en el estudio.

## Empresas

A continuación mostramos las clasificaciones de cada empresa censada.

::: panel-tabset
### Distribución

```{r}
#histograma
fig <- plot_ly(discretas, x=~CORRELA_16, type='histogram')
fig <- fig %>% layout(title = "Clasificación CIIU",
                      yaxis=list(title='Frec. abs.'))
fig
```

En la pestaña identificadores se encuentran las descripciones de cada una de las variables. En caso de una revisión exhaustiva recomendamos ingresar al [documento CIIU 2021](https://www.dane.gov.co/files/sen/nomenclatura/ciiu/CIIU_Rev_4_AC2021.pdf) proporcionado por el DANE. *Las utilizadas se encuentran desde la página 490*.

### Identificadores

| **Identificador** | **Significado** |
|-----------------|-------------------------------------------------------|
| 451 | Vehículos automotores |
| 453 | Partes, piezas y accesorios para vehículos automotores. |
| 454 | Mantenimiento y reparación de motocicletas y de sus partes, piezas y accesorios. |
| 462 | Al por mayor de materias primas agropecuarias o animales vivos. |
| 464 | Al por mayor de alimentos, bebidas y tabaco. |
| 465 | Al por mayor de maquinaria y equipo. |
| 466 | Al por mayor especializado de combustibles no convencionales, productos de construcción, químicos, metales y desperdicios. |
| 4711-472 | Al por menor en establecimientos no especializados (excepto 4719).) |
| 4719 | Al por menor de surtido en diferentes alimentos, bebidas alcohólicas y tabaco. |
| 473 | Al por menor de productos para automotores. |
| 4741-4742 | Al por menor de software y hardware de computadores y dispositivos audiovisuales. |
| 4752 | Al por menor de artículos de ferretería, pintura y productos de vidrio. |
| 4759-4761 | Al por menor de artículos domésticos de limpieza, papelería, cocina o emergencia. |
| 4771-4751 | Al por menor de ropa o textiles. |
| 4772 | Al por menor de calzado. |
| 4773 | Al por menor de productos farmacéuticos. |

Explicaciones mas precisas de cada identificador se encuentran en el [documento CIIU 2021](https://www.dane.gov.co/files/sen/nomenclatura/ciiu/CIIU_Rev_4_AC2021.pdf). *Las utilizadas se encuentran desde la página 490*.
:::

## Análisis Univariado

### Variables Cualitativas

::: panel-tabset
### CORRELA_16

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"

Tipempr <- discretas$CORRELA_16
tipo1 <- list(454, 451, 453)
tipo2 <- list(462, 464, 465, 466)
tipo3 <- list("4711-472", 4719, 473, "4741-4742", 4752, "4759-4761", "4771-4751", 4772, 4773)
# 
Tipempr[Tipempr %in% tipo1] <- 1
Tipempr[Tipempr %in% tipo2] <- 2
Tipempr[Tipempr %in% tipo3] <- 3
# 
Tipempr <- factor(as.integer(Tipempr), labels=c("Comercio vehiculos", "Comercio al por mayor", "Comercio al por menor"))
discretas$CORRELA_16 <- Tipempr
#histograma
fig <- plot_ly(discretas, x=~CORRELA_16, type='histogram')
fig <- fig %>% layout(title = "Comercios Censados",
                      yaxis=list(title='Frec. abs.'))
fig
```

### IDAIO

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
IDAIOcont<-as.data.frame(table(discretas[,2]))
#categorías de la variable
catpIDAIO <- attributes(IDAIOcont[,1])$levels

dataIDAIO <- data.frame(table(discretas[,2]))

perpIDAIO <- dataIDAIO[,2]/nrow(dataIDAIO)*100

dataIDAIO<-data.frame(catpIDAIO,perpIDAIO)
fig <- plot_ly(data, labels=~catpIDAIO, values=~perpIDAIO, type='pie')
fig <- fig %>% layout(title = "Edad de la empresa (en años)")
fig

```

Nótese que parece haberse reducido la creación de empresa en los últimos 10 años.

Proponemos tambien hacer una clasificación de este tipo, pero en vez de intervalos de décadas, hacerla según mandatos presidenciales.

### PROMUJ

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
PROMUJcont<-as.data.frame(table(discretas[,3]))
#categorías de la variable
catpPROMUJ <- attributes(PROMUJcont[,1])$levels

dataPROMUJ <- data.frame(table(discretas[,3]))

perpPROMUJ <- dataPROMUJ[,2]/nrow(dataPROMUJ)*100

dataPROMUJ<-data.frame(catpPROMUJ,perpPROMUJ)
fig <- plot_ly(data, labels=~catpPROMUJ, values=~perpPROMUJ, type='pie')
fig <- fig %>% layout(title = "¿La empresa cuenta con mujeres propietarias y socias?")
fig

```

### PROHOM

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
PERMUJcont<-as.data.frame(table(discretas[,4]))
#categorías de la variable
catpPERMUJ <- attributes(PERMUJcont[,1])$levels

dataPERMUJ <- data.frame(table(discretas[,4]))

perpPERMUJ <- dataPERMUJ[,2]/nrow(dataPERMUJ)*100

dataPERMUJ<-data.frame(catpPERMUJ,perpPERMUJ)
fig <- plot_ly(data, labels=~catpPERMUJ, values=~perpPERMUJ, type='pie')
fig <- fig %>% layout(title = "¿La empresa cuenta con hombres propietarios y socios?")
fig

```

### PERMUJ

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
PERHOMcont<-as.data.frame(table(discretas[,5]))
#categorías de la variable
catpPERHOM <- attributes(PERHOMcont[,1])$levels

dataPERHOM <- data.frame(table(discretas[,5]))

perpPERHOM <- dataPERHOM[,2]/nrow(dataPERHOM)*100

dataPERHOM<-data.frame(catpPERHOM,perpPERHOM)
fig <- plot_ly(data, labels=~catpPERHOM, values=~perpPERHOM, type='pie')
fig <- fig %>% layout(title = "Cantidad de mujeres como personal permanente")
fig

```

### PERHOM

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
PERHOMcont<-as.data.frame(table(discretas[,6]))
#categorías de la variable
catpPERHOM <- attributes(PERHOMcont[,1])$levels

dataPERHOM <- data.frame(table(discretas[,6]))

perpPERHOM <- dataPERHOM[,2]/nrow(dataPERHOM)*100

dataPERHOM<-data.frame(catpPERHOM,perpPERHOM)
fig <- plot_ly(data, labels=~catpPERHOM, values=~perpPERHOM, type='pie')
fig <- fig %>% layout(title = "Cantidad de hombres como personal permanente")
fig

```

### DIRMUJ

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
DIRMUJcont<-as.data.frame(table(discretas[,7]))
#categorías de la variable
catpDIRMUJ <- attributes(DIRMUJcont[,1])$levels

dataDIRMUJ <- data.frame(table(discretas[,7]))

perpDIRMUJ <- dataDIRMUJ[,2]/nrow(dataDIRMUJ)*100

dataDIRMUJ<-data.frame(catpDIRMUJ,perpDIRMUJ)
fig <- plot_ly(data, labels=~catpDIRMUJ, values=~perpDIRMUJ, type='pie')
fig <- fig %>% layout(title = "Cantidad de mujeres contratadas de manera directa")
fig

```

### DIRHOM

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
DIRHOMcont<-as.data.frame(table(discretas[,8]))
#categorías de la variable
catpDIRHOM <- attributes(DIRHOMcont[,1])$levels

dataDIRHOM <- data.frame(table(discretas[,8]))

perpDIRHOM <- dataDIRHOM[,2]/nrow(dataDIRHOM)*100

dataDIRHOM <- data.frame(catpDIRHOM,perpDIRHOM)
fig <- plot_ly(data, labels=~catpDIRHOM, values=~perpDIRHOM, type='pie')
fig <- fig %>% layout(title = "Cantidad de hombres como personal contratado de manera directa")
fig

```

### AGENCIA

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
AGENCIAcont<-as.data.frame(table(discretas[,9]))
#categorías de la variable
catpAGENCIA <- attributes(AGENCIAcont[,1])$levels

dataAGENCIA <- data.frame(table(discretas[,9]))

perpAGENCIA <- dataAGENCIA[,2]/nrow(dataAGENCIA)*100

dataAGENCIA<-data.frame(catpAGENCIA,perpAGENCIA)
fig <- plot_ly(data, labels=~catpAGENCIA, values=~perpAGENCIA, type='pie')
fig <- fig %>% layout(title = "¿La empresa tiene personal contratado por agencia?")
fig

```

### APREN

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
APRENMUJcont<-as.data.frame(table(discretas[,10]))
#categorías de la variable
catpAPRENMUJ <- attributes(APRENMUJcont[,1])$levels

dataAPRENMUJ <- data.frame(table(discretas[,10]))

perpAPRENMUJ <- dataAPRENMUJ[,2]/nrow(dataAPRENMUJ)*100

dataAPRENMUJ<-data.frame(catpAPRENMUJ,perpAPRENMUJ)
fig <- plot_ly(data, labels=~catpAPRENMUJ, values=~perpAPRENMUJ, type='pie')
fig <- fig %>% layout(title = "Cantidad de aprendices en la empresa")
fig

```

### PUBLICI

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
APRENHOMcont<-as.data.frame(table(discretas[,11]))
#categorías de la variable
catpAPRENHOM <- attributes(APRENHOMcont[,1])$levels

dataAPRENHOM <- data.frame(table(discretas[,11]))

perpAPRENHOM <- dataAPRENHOM[,2]/nrow(dataAPRENHOM)*100

dataAPRENHOM<-data.frame(catpAPRENHOM,perpAPRENHOM)
fig <- plot_ly(data, labels=~catpAPRENHOM, values=~perpAPRENHOM, type='pie')
fig <- fig %>% layout(title = "La empresa invierte en publicidad")
fig

```
### TAMAÑO

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
APRENHOMcont<-as.data.frame(table(discretas[,12]))
#categorías de la variable
catpAPRENHOM <- attributes(APRENHOMcont[,1])$levels

dataAPRENHOM <- data.frame(table(discretas[,12]))

perpAPRENHOM <- dataAPRENHOM[,2]/nrow(dataAPRENHOM)*100

dataAPRENHOM<-data.frame(catpAPRENHOM,perpAPRENHOM)
fig <- plot_ly(data, labels=~catpAPRENHOM, values=~perpAPRENHOM, type='pie')
fig <- fig %>% layout(title = "Tamaño de la Empresa")
fig

```
:::

#### Variables Cualitativas de Agrupamiento

::: panel-tabset
### GASNOP 

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
PUBLICIcont<-as.data.frame(table(discretas[,13]))
#categorías de la variable
catpPUBLICI <- attributes(PUBLICIcont[,1])$levels

dataPUBLICI <- data.frame(table(discretas[,13]))

perpPUBLICI <- dataPUBLICI[,2]/nrow(dataPUBLICI)*100

dataPUBLICI <- data.frame(catpPUBLICI,perpPUBLICI)
fig <- plot_ly(data, labels=~catpPUBLICI, values=~perpPUBLICI, type='pie')
  fig <- fig %>% layout(title = "Gastos no Operacionales")
fig

```

### GASTOS 

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
PUBLICIcont<-as.data.frame(table(discretas[,14]))
#categorías de la variable
catpPUBLICI <- attributes(PUBLICIcont[,1])$levels

dataPUBLICI <- data.frame(table(discretas[,14]))

perpPUBLICI <- dataPUBLICI[,2]/nrow(dataPUBLICI)*100

dataPUBLICI <- data.frame(catpPUBLICI,perpPUBLICI)
fig <- plot_ly(data, labels=~catpPUBLICI, values=~perpPUBLICI, type='pie')
  fig <- fig %>% layout(title = "Gastos Operacionales")
fig

```

### INVPRO 

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
PUBLICIcont<-as.data.frame(table(discretas[,15]))
#categorías de la variable
catpPUBLICI <- attributes(PUBLICIcont[,1])$levels

dataPUBLICI <- data.frame(table(discretas[,15]))

perpPUBLICI <- dataPUBLICI[,2]/nrow(dataPUBLICI)*100

dataPUBLICI <- data.frame(catpPUBLICI,perpPUBLICI)
fig <- plot_ly(data, labels=~catpPUBLICI, values=~perpPUBLICI, type='pie')
  fig <- fig %>% layout(title = "Inventario Promedio")
fig

```
### VENTA

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
PUBLICIcont<-as.data.frame(table(discretas[,16]))
#categorías de la variable
catpPUBLICI <- attributes(PUBLICIcont[,1])$levels

dataPUBLICI <- data.frame(table(discretas[,16]))

perpPUBLICI <- dataPUBLICI[,2]/nrow(dataPUBLICI)*100

dataPUBLICI <- data.frame(catpPUBLICI,perpPUBLICI)
fig <- plot_ly(data, labels=~catpPUBLICI, values=~perpPUBLICI, type='pie')
  fig <- fig %>% layout(title = "Ventas (clasificación usada)")
fig

```
### SUELDOS 

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
PUBLICIcont<-as.data.frame(table(discretas[,17]))
#categorías de la variable
catpPUBLICI <- attributes(PUBLICIcont[,1])$levels

dataPUBLICI <- data.frame(table(discretas[,17]))

perpPUBLICI <- dataPUBLICI[,2]/nrow(dataPUBLICI)*100

dataPUBLICI <- data.frame(catpPUBLICI,perpPUBLICI)
fig <- plot_ly(data, labels=~catpPUBLICI, values=~perpPUBLICI, type='pie')
  fig <- fig %>% layout(title = "Ventas (clasificación usada)")
fig

```

### CONSUI 

```{r}
#antes de aplicar esta función, a cada variable discreta toca aplicarle la función "factor()"
PUBLICIcont<-as.data.frame(table(discretas[,18]))
#categorías de la variable
catpPUBLICI <- attributes(PUBLICIcont[,1])$levels

dataPUBLICI <- data.frame(table(discretas[,18]))

perpPUBLICI <- dataPUBLICI[,2]/nrow(dataPUBLICI)*100

dataPUBLICI <- data.frame(catpPUBLICI,perpPUBLICI)
fig <- plot_ly(data, labels=~catpPUBLICI, values=~perpPUBLICI, type='pie')
  fig <- fig %>% layout(title = "Consumo intermedio entre 1996 y 2006.")
fig

```

Es este caso, basamos la clasificación del tamaño de cada empresa según el [decreto presidencial 957 de 2019](https://www.funcionpublica.gov.co/eva/gestornormativo/norma.php?i=94550).

Nótese que la gran mayoría de empresas censadas (es decir, las conformantes del sector) son PYMEs.
:::

### Variables Cuantitativas

Todas las variables cuentan con un fuerte sesgo a izquierda. Por ello, aplicamos escala LOG.

```{r}
# Asumimos los NA's como si la empresa encuestada no hubiese registrado algún valor. 
suppressWarnings({

continuas<- data.frame(lapply(continuas, function(x) { x[is.na(x)] <- 1; return(x) }))
# pasamos a escala logarítmica
logcontinuas<-log(continuas[,2:17])
# interpretamos los -inf como ceros
for(i in seq_along(logcontinuas)) {logcontinuas[is.infinite(logcontinuas[, i]), i] <- 0}
logcontinuas<- data.frame(lapply(logcontinuas, function(x) { x[is.na(x)] <- 1; return(x) }))
})
```

::::::::::::::::::::::::::::::::::::::::::::::::::: panel-tabset
### Producción

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~BRUTA, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Producción bruta de la empresa", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~BRUTA, type="histogram")
fig <- fig %>% layout(title = "Producción bruta de la empresa Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Consumo 1996-2006

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~CONSUI, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Consumo intermedio entre 1996 y 2006", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~CONSUI, type="histogram")
fig <- fig %>% layout(title = "Consumo intermedio entre 1996 y 2006 log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Total Sueldos

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~SUELDOS, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Total de sueldos y salarios causados en el año", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~SUELDOS, type="histogram")
fig <- fig %>% layout(title = "Total de sueldos y salarios causados en el año Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Prestaciones

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~PRESTAC, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Total en prestaciones sociales causadas en el año", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~PRESTAC, type="histogram")
fig <- fig %>% layout(title = "Total en prestaciones sociales causadas en el año log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Ventas

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~VENTA, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Ventas causadas en el año", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~VENTA, type="histogram")
fig <- fig %>% layout(title = "Ventas causadas en el año log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Valor Agregado

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~AGREGA, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Valor Agregado", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~AGREGA, type="histogram")
fig <- fig %>% layout(title = "Valor Agregado Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Sueldos de planta

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~SUEPLAN, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Sueldos de planta", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~SUEPLAN, type="histogram")
fig <- fig %>% layout(title = "Sueldos de planta Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Prestaciones de planta

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~PREPLAN, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Prestaciones de planta", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~PREPLAN, type="histogram")
fig <- fig %>% layout(title = "Prestaciones de planta Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Seguridad Social

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~COTIZA, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Cotizaciones patronales obligatorias causadas en el año", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~COTIZA, type="histogram")
fig <- fig %>% layout(title = "Cotizaciones patronales obligatorias causadas en el año Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::

Se conoce a las *cotizaciones patronales* como todos los aportes monetarios que deben ser realizados por parte de los empleadores a la seguridad social.
:::::

### Remuneración

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~TOTREM, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Total en Remuneración", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~TOTREM, type="histogram")
fig <- fig %>% layout(title = "Total en Remuneración Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Rotación de Inventarios

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~ROTACION, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Rotación de Inventarios", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~ROTACION, type="histogram")
fig <- fig %>% layout(title = "Rotación de Inventarios Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### IInventario Promedio

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~INVPRO, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Inventario Promedio", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~INVPRO, type="histogram")
fig <- fig %>% layout(title = "Inventario Promedio Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Mercancía

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~CTO, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Costo de mercancia vendida", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~CTO, type="histogram")
fig <- fig %>% layout(title = "Costo de mercancia vendida Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Mercancía y Costos

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~CTOINS, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Mercancía y Costos de Comercio", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~CTOINS, type="histogram")
fig <- fig %>% layout(title = "Mercancía y Costos de Comercio Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Gastos y Costos

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~GASTOS, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Total costos y gastos operacionales", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~GASTOS, type="histogram")
fig <- fig %>% layout(title = "Total costos y gastos operacionales Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::

### Gastos no Operacionales

::::: columns
::: {.column width="50%"}
```{r}
fig <- plot_ly(continuas, x=~GASTOSNOP, type='violin', 
               box=list(visible=T),
               meanline=list(visible=T))
fig <- fig %>% layout(title = "Gastos no operacionales", 
                      yaxis=list(title = "", zeroline=F))
fig
```
:::

::: {.column width="50%"}
```{r}
fig <- plot_ly(logcontinuas, x=~GASTOSNOP, type="histogram")
fig <- fig %>% layout(title = "Gastos no Operacionales Log",
                      yaxis=list(title='Frec. abs.'))
fig
```
:::
:::::
:::::::::::::::::::::::::::::::::::::::::::::::::::

## Análisis Bivariado

Todos los Análisis bivariados que cuenten con variables continuas serán realizados en base a la base logarítmica. Esto para facilitar la exposición de los datos.

### Cuantitativas vs Cuantitativas

A continuación colocamos un plotpairs() de las cinco variables que más nos llamaron la atención para estudiar.

```{r}
plotpairs(logcontinuas[, c(1,3,5,12,16)])
```

En la propia tabla se alcanza a apreciar que en general todas las variables cuentan con correlaciones notables. Así distintas variables, particularmente ***GASTOSNOP*** muestren una distribución bimodal. Esto ocurre debido a que varias empresas registraron con cero esta variable en particular.

### Cuantitativas vs Cualitativas

La variable ***BRUTA*** nos pareció la variable más relevante de todas, dado a que esta es con la que se clasifica a las empresas según su tamaño. Veamos los siguientes boxplots:

::: panel-tabset
#### Clasificación CIIU

Como vendría a suponerse, el tipo de comercio al que se dedique una empresa muestra estar correlacionado con su tamaño.

```{r}
dataframelog<-cbind.data.frame(discretas,logcontinuas)

boxplot(dataframelog$BRUTA~dataframelog[, 1],las=1, xlab = "Clasificacion de las empresas", ylab = "Produccion bruta", border = "darkblue", col = "lightblue")

```

#### Edad Empresas

Se logra apreciar que existe una correlación muy ligera, casi despreciable, entre la edad de una empresa y su tamaño.

```{r}
boxplot(dataframelog$BRUTA~dataframelog[, 3],las=1, xlab = "Edad", ylab = "Produccion bruta", border = "darkred", col="lightcoral")
```

#### Publicidad

Se evidencia tambien que existe una correlacion, así sea ligera, entre el tamaño de la empresa y su gasto en publicadad. Hay que tomar en cuenta que esta clasificación según el gasto en publicidad se hace según el porcentaje de sus gastos respecto a su tamaño.

```{r}
boxplot(dataframelog$BRUTA~dataframelog[, 13],las=1, xlab = "Publicidad", ylab = "Produccion bruta", border = "darkgreen", col = "lightgreen")

```

#### Mujeres Propietarias

En este cuadro se muestra que existe una correlación entre tener mujeres propietarias o socias, con el tamaño de la empresa.

```{r}
boxplot(dataframelog$BRUTA~dataframelog[, 4],las=1, xlab = "Mujeres Inversoras", ylab = "Tamaño Empresa", border = "deeppink", col="lightpink")
```

#### Gastos no Operacionales

```{r}
boxplot(dataframelog$GASTOSNOP~dataframelog[, 14],las=1, xlab = "Mujeres Inversoras", ylab = "Tamaño Empresa", border = "darkblue", col = "lightblue")
```
:::

### Discretas vs Discretas

En la siguiente figura comparamos la variable clasificación CIIU con las demás variables discretas.

En esta tabla se logran mostrar distintas distribuciones que tienen todas las variables respecto a la clasificación a la que pertenece cada empresa. De esta manera, se puede evidenciar que no todo el sector empresarial de colombia tiene comportamientos homogéneos respecto a, digamos, la edad de existencia de la empresa o gastos en publicidad.

```{r}
discretas2<-discretas
discretas2<-(discretas2[,c(-2,-5)])

par(mfrow=c(3,2),mai=c(0.3,1,0.2,0.1),las=1,cex=0.7);
for (i in 2:16){
  tc<-unclass(table(discretas2$CORRELA_16, discretas2[,i]));
  plotct(tc,"row");
  title(main=names(discretas2)[i]);
}
```
